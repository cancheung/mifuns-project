<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mifuns.system.facade.mapper.SysResourceMapper" >
  <resultMap id="BaseResultMap" type="com.mifuns.system.facade.entity.SysResource" >
    <id column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
    <result column="serial_num" property="serialNum" jdbcType="INTEGER" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="insert_date" property="insertDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    resource_id, resource_name, type, url, parent_id, parent_ids, serial_num, permission,
    status, insert_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from sys_resource
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_resource
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mifuns.system.facade.entity.SysResource" >
    insert into sys_resource (resource_id, resource_name, type,
    url, parent_id, parent_ids,
    serial_num, permission, status,
    insert_date, update_date)
    values (#{resourceId,jdbcType=BIGINT}, #{resourceName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
    #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{parentIds,jdbcType=VARCHAR},
    #{serialNum,jdbcType=INTEGER}, #{permission,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
    #{insertDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mifuns.system.facade.entity.SysResource" >
    insert into sys_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="resourceName != null" >
        resource_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="parentIds != null" >
        parent_ids,
      </if>
      <if test="serialNum != null" >
        serial_num,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="insertDate != null" >
        insert_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="resourceName != null" >
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="serialNum != null" >
        #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="insertDate != null" >
        #{insertDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mifuns.system.facade.entity.SysResource" >
    update sys_resource
    <set >
      <if test="resourceName != null" >
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        parent_ids = #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="serialNum != null" >
        serial_num = #{serialNum,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="insertDate != null" >
        insert_date = #{insertDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mifuns.system.facade.entity.SysResource" >
    update sys_resource
    set resource_name = #{resourceName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      parent_ids = #{parentIds,jdbcType=VARCHAR},
      serial_num = #{serialNum,jdbcType=INTEGER},
      permission = #{permission,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      insert_date = #{insertDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>

  <select id="queryPageList" resultMap="BaseResultMap" parameterType="com.mifuns.system.facade.entity.SysResource" >
    select
    <include refid="Base_Column_List" />
    from sys_resource
    <where>
      <if test="resourceId != null" >
        and resource_id = #{resourceId,jdbcType=BIGINT}
      </if>
      <if test="status != null" >
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
  </select>


  <select id="findAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM sys_resource
    ORDER BY permission
  </select>
  <select id="findTypeAll" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    FROM sys_resource
    WHERE TYPE = #{type,jdbcType=VARCHAR}
    ORDER BY permission
  </select>
  <select id="findResources" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from sys_resource
    WHERE resource_id IN (${ids})
    ORDER BY permission
  </select>
  <select id="findResourcesByAppUser" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT DISTINCT
    re.resource_id, re.resource_name, re.type, re.url, re.parent_id, re.parent_ids, re.permission, re.status, re.insert_date, re.update_date
    from sys_resource re,
    sys_role_resource rr,
    sys_user_app_role uar,
    sys_app a,
    sys_user u
    where re.resource_id = rr.resource_id
    and uar.role_id = rr.role_id
    ##and uar.user_id = 3
    ##and uar.app_id = 2
    and uar.app_id = a.app_id
    and uar.user_id = u.user_id
    and a.app_key = #{appKey}
    and u.username = #{username}
    ORDER BY re.permission
  </select>
  <select id="findResourcesByRoleIds" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT DISTINCT
    re.resource_id, re.resource_name, re.type, re.url, re.parent_id, re.parent_ids, re.permission, re.status, re.insert_date, re.update_date
    FROM sys_resource re,
    sys_role_resource rr
    WHERE re.resource_id = rr.resource_id
    AND rr.role_id IN (${roleIds})
    ORDER BY re.permission
  </select>
</mapper>